#   ______                                 
#  /      \                                
# |  ▓▓▓▓▓▓\__   __   __  ______  __    __ 
# | ▓▓___\▓▓  \ |  \ |  \|      \|  \  |  \
#  \▓▓    \| ▓▓ | ▓▓ | ▓▓ \▓▓▓▓▓▓\ ▓▓  | ▓▓
#  _\▓▓▓▓▓▓\ ▓▓ | ▓▓ | ▓▓/      ▓▓ ▓▓  | ▓▓
# |  \__| ▓▓ ▓▓_/ ▓▓_/ ▓▓  ▓▓▓▓▓▓▓ ▓▓__/ ▓▓
#  \▓▓    ▓▓\▓▓   ▓▓   ▓▓\▓▓    ▓▓\▓▓    ▓▓
#   \▓▓▓▓▓▓  \▓▓▓▓▓\▓▓▓▓  \▓▓▓▓▓▓▓_\▓▓▓▓▓▓▓
#                                |  \__| ▓▓
#                                 \▓▓    ▓▓
#                                  \▓▓▓▓▓▓ 
# Read `man 5 sway` for a complete reference.

# ╔════════════════════════════════════════════════╗
# ║  ░█▄█░█▀▀░▀█▀░█░█░█▀█░█▀▄░█▀█░█░░░█▀█░█▀▀░█░█  ║
# ║  ░█░█░█▀▀░░█░░█▀█░█░█░█░█░█░█░█░░░█░█░█░█░░█░  ║
# ║  ░▀░▀░▀▀▀░░▀░░▀░▀░▀▀▀░▀▀░░▀▀▀░▀▀▀░▀▀▀░▀▀▀░░▀░  ║
# ╚════════════════════════════════════════════════╝
# Window management on the left hand side (arrows)
# Workspace management on the right hand side (numbers)
# Permanent workspace layout
# Use of keycodes instead of names to maintain consistency when changing keyboard layouts
#
# Hotkeys:
# *No* modifier to **focus** things
# *Shift* modifier for **moving** things
# *Control* modifier for **editing* things

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

include /etc/sway/config-vars.d/*

### Output configuration
#
#
# #########################################
# Outputs(Screens)                      #
#########################################
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
set $output-primary "DP-1" 
set $output-secondary "HDMI-A-1"
output DP-1 resolution 2560x1440 position 0,0
output HDMI-A-1 resolution 2560x2880 position 2560,0 
### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000' \
         timeout 900 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

#########################################
# Inputs                                #
#########################################
### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
# input "PixArt Lenovo USB Optical Mouse" {
#
#   }
seat seat0 xcursor_theme BreezeX-RoséPineDawn

#########################################
# Applications                          #
#########################################

# ======== Defaults  ======== #
set $default-web-browser librewolf
set $default-terminal wezterm

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi -show drun | xargs swaymsg exec --

# ======== Autostart  ======== #
# redshift to save the eyes
exec --no-startup-id redshift -l 40.650002:-73.949997 -t 6500:3500
# launch 1password to trigger system unlock
exec --no-startup-id 1password

# setup PKM workspace
# exec "workspace 4; exec $default-terminal, exec obsidian; workspace 1"

# ======== Run  ======== #
# start a terminal
bindsym $mod+Return exec $default-terminal 
bindsym $mod+Shift+w exec $default-web-browser

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show-icons -show drun"
# bindcode $mod+40 exec "rofi -show combi" 
# Start your launcher
bindsym $mod+d exec $menu
bindsym $mod+Shift+d exec wofi -show run | xargs swaymsg exec --
#########################################
# Windows
#########################################
# hotkeys live (mostly) on the left hand side

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier 

# toggle sticky mode for floating windows
bindsym $mod+Shift+s sticky toggle

# switch to urgent window in an unfocused workspace
bindsym $mod+u [urgent=latest] focus

# kill focused window
bindsym $mod+Shift+q kill

# change focus 
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal/vertical orientation
bindsym $mod+Control+h splith
bindsym $mod+Control+v splitv

# resize windows without resize mode with smaller increments
bindsym $mod+Control+Left resize grow width 4 px or 4 ppt
bindsym $mod+Control+Down resize shrink height 4 px or 4 ppt
bindsym $mod+Control+Up resize grow height 4 px or 4 ppt
bindsym $mod+Control+Right resize shrink width 4 px or 4 ppt

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Control+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent/child container
bindsym $mod+a focus parent
bindsym $mod+c focus child

#########################################
# Workspaces
#########################################
# hotkeys live on the right hand side

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# set $ws1 "1:"
# set $ws2 "2:󰖟"
# set $ws3 "3:󰐻"
# set $ws4 "4:"
# set $ws5 "5:󰪶"
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# cycle all workspaces using 'j' & 'k' (colemak-dh) - index-1 row1&row3 
bindcode $mod+45 workspace prev
bindcode $mod+44 workspace next
# cycle workspaces on current screen with 'h' & 'l' (colemak-dh) - index row1&row3
bindcode $mod+43 workspace prev_on_output
bindcode $mod+46 workspace next_on_output

# disable switching to the same workspace twice to return to last used
workspace_auto_back_and_forth no
# use toggle instead 
# toggle between 'last used' workspace and current workspace with 'n'
bindcode $mod+57 workspace back_and_forth

# move focused container to workspace and switch to it
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10; workspace $ws10

# move container to last used workspace with 'N'
bindcode $mod+Shift+57 move container to workspace back_and_forth; workspace last_used

#
# Assign screens to workspaces          
#########################################

# move workspace to output (screen) with 'h' & 'l
  bindcode $mod+Shift+43 move workspace to output left
  bindcode $mod+Shift+46 move workspace to output right

# assign workspaces to outputs
# grouping workspaces by output allows disconnecting screens 
  workspace $ws1 output $output-primary
  workspace $ws2 output $output-primary
  workspace $ws3 output $output-primary
  workspace $ws4 output $output-primary
  workspace $ws5 output $output-primary
  workspace $ws6 output $output-primary
  workspace $ws7 output $output-secondary
  workspace $ws8 output $output-secondary
  workspace $ws9 output $output-secondary
  workspace $ws10 output $output-secondary

#
# Assign applications to workspaces     
#########################################

# ======== WS 1 (terminal) ======== #

# ======== WS 2 (browser-primary) ======== #
assign [class="librewolf"] $ws2

# ======== WS 3 (browser-secondary) ======== #
assign [class="firefox"] $ws3
assign [class="Microsoft-edge"] $ws3

# ======== WS 4 (PKM) ======== #
assign [class="^obsidian$"] $ws4

# ======== WS 5 (comms) ======== #

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#########################################
# General settings                      #
#########################################
# reload the configuration file
  bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'#

# Resizing containers:
#
  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym Left resize shrink width 10 px or 10 ppt
      bindsym Down resize grow height 10 px or 10 ppt
      bindsym Up resize shrink height 10 px or 10 ppt
      bindsym Right resize grow width 10 px or 10 ppt

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"          
      bindsym $mod+r mode "default"
  }
  bindsym $mod+r mode "resize"

#########################################
# UI                                    #
#########################################

# Disable titlebar
default_border pixel 1
for_window [class="^.*"] border pixel 1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:DejaVu Sans Mono 10
# title_align center

# Add icons to titlebar
# for_window [*] title_window_icon padding 1px

# Inner/Outer Gaps
gaps inner 10
gaps outer 0

# Enabling “Smart Gaps” means no gaps will be shown when there is
# precisely one window or split container on the workspace.
#
# inverse_outer only enables outer gaps when there is exactly one
# window or split container on the workspace.
smart_gaps inverse_outer

# Hide edge borders
# hide_edge_borders smart

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $HOME/.local/share/themes/rose-pine/wallpapers-main/rose_pine_shape.png fill

## Base16 Rosé Pine Moon
# Author: Emilia Dunfelt &lt;edun@dunfelt.se&gt;

set $base00 #232136
set $base01 #2a273f
set $base02 #393552
set $base03 #6e6a86
set $base04 #908caa
set $base05 #e0def4
set $base06 #e0def4
set $base07 #56526e
set $base08 #eb6f92
set $base09 #f6c177
set $base0A #ea9a97
set $base0B #3e8fb0
set $base0C #9ccfd8
set $base0D #c4a7e7
set $base0E #f6c177
set $base0F #56526e
## Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border  BG      Text    Indicator Child Border
client.focused          $base05 $base0D $base00 $base0D $base0D
client.focused_inactive $base01 $base01 $base05 $base03 $base01
client.unfocused        $base01 $base00 $base05 $base01 $base01
client.urgent           $base08 $base08 $base00 $base08 $base08
client.placeholder      $base00 $base00 $base05 $base00 $base00
client.background       $base07

# Load waybar
bar {
     swaybar_command waybar
}
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*
