#  __  ______  
# |  \/      \ 
#  \▓▓  ▓▓▓▓▓▓\
# |  \\▓▓__| ▓▓
# | ▓▓ |     ▓▓
# | ▓▓__\▓▓▓▓▓\
# | ▓▓  \__| ▓▓
# | ▓▓\▓▓    ▓▓
#  \▓▓ \▓▓▓▓▓▓ 
             
             
# TODO
# - assign apps to specific workspaces
# - split out config into modules
# - light/dark mode toggle
# - ui module
#   - toggle i3bar
# - support scripts  
#   - center mouse
#   - setup display names (for display/workspaces)
# ╔════════════════════════════════════════════════╗
# ║  ░█▄█░█▀▀░▀█▀░█░█░█▀█░█▀▄░█▀█░█░░░█▀█░█▀▀░█░█  ║
# ║  ░█░█░█▀▀░░█░░█▀█░█░█░█░█░█░█░█░░░█░█░█░█░░█░  ║
# ║  ░▀░▀░▀▀▀░░▀░░▀░▀░▀▀▀░▀▀░░▀▀▀░▀▀▀░▀▀▀░▀▀▀░░▀░  ║
# ╚════════════════════════════════════════════════╝
# Window management on the left hand side (arrows)
# Workspace management on the right hand side (numbers)
# Permanent workspace layout
#
# Hotkeys:
# *No* modifier to **focus** things
# *Shift* modifier for **moving** things
# *Control* modifier for **editing* things

# 1 for alt
set $mod Mod4

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


# Colors for windows (in for inactive)
set $bgcolor    #523d64
set $in-bgcolor #363636
set $text       #ffffff
set $in-text    #969696
set $u-bgcolor  #ff0000
set $indicator  #a8a3c1

#########################################
# Inputs                                #
#########################################
### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
# input * xkb_layout "us,de,ru"
# input * xkb_variant "colemak,,typewriter"
# input * xkb_options "grp:win_space_toggle"
# input "MANUFACTURER1 Keyboard" xkb_model "pc101"
# input "MANUFACTURER2 Keyboard" xkb_model "jp106"
#########################################
# Outputs(Screens)                      #
#########################################
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# set $output-primary output DP-0
set $output-primary output primary
set $output-secondary output HDMI-0
#########################################
# Applications                          #
#########################################

# ======== Defaults  ======== #
set $default-web-browser vivaldi-stable
set $default-terminal wezterm

# ======== Autostart  ======== #
# setup PKM workspace
exec "workspace 4; exec $default-terminal, exec obsidian; workspace 1"

# ======== Run  ======== #
# start a terminal
bindsym $mod+Return exec $default-terminal 
bindsym $mod+Shift+w exec $default-web-browser

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show-icons -show drun"
bindcode $mod+40 exec "rofi -show combi" 
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

#########################################
# Windows
#########################################
# hotkeys live (mostly) on the left hand side

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod normal

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# toggle sticky mode for floating windows
bindcode $mod+Shift+s sticky toggle

# switch to urgent window in an unfocused workspace
bindsym $mod+u [urgent=latest] focus

# kill focused window
bindsym $mod+Shift+q kill

# change focus 
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal/vertical orientation
bindsym $mod+Control+h splith
bindsym $mod+Control+v splitv

# resize windows without resize mode with smaller increments
bindsym $mod+Control+Left resize grow width 4 px or 4 ppt
bindsym $mod+Control+Down resize shrink height 4 px or 4 ppt
bindsym $mod+Control+Up resize grow height 4 px or 4 ppt
bindsym $mod+Control+Right resize shrink width 4 px or 4 ppt

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Control+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent/child container
bindsym $mod+a focus parent
bindsym $mod+c focus child


#########################################
# Workspaces
#########################################
# hotkeys live on the right hand side

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# cycle workspaces using h & l to match vim
bindcode $mod+Shift+46 workspace next
bindcode $mod+Shift+43 workspace prev
# cycle workspaces on current screen with 'h' & 'l'
bindcode $mod+43 workspace prev_on_output
bindcode $mod+46 workspace next_on_output

# disable switching to the same workspace twice to return to last used
workspace_auto_back_and_forth no
# use toggle instead 
# toggle between 'last used' workspace and current workspace with 'n'
bindcode $mod+57 workspace back_and_forth

# move focused container to workspace and switch to it
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace $ws10

# move container to last used workspace with 'N'
bindsym $mod+Shift+57 move container to workspace back_and_forth; workspace last_used

#
# Assign screens to workspaces          
#########################################

# move workspace to output (screen)
bindsym $mod+Control+43 move workspace to output left
bindsym $mod+Control+46 move workspace to output right

# assign workspaces to outputs
# grouping workspaces by output allows disconnecting screens 
workspace 1   $output-primary
workspace 2   $output-primary
workspace 3   $output-primary
workspace 4   $output-primary
workspace 5   $output-primary
workspace 6   $output-primary
workspace 7   $output-secondary
workspace 8   $output-secondary
workspace 9   $output-secondary
workspace 10  $output-secondary

#
# Assign applications to workspaces     
#########################################

# ======== WS 1 (terminal) ======== #

# ======== WS 2 (browser-primary) ======== #
assign [class="Vivaldi"] $ws2

# ======== WS 3 (browser-secondary) ======== #
assign [class="Firefox"] $ws3
assign [class="Microsoft-edge"] $ws3

# ======== WS 4 (PKM) ======== #
assign [class="^obsidian$"] $ws4

# ======== WS 5 (comms) ======== #

#
# Saved Layouts (https://i3wm.org/docs/layout-saving.html)
#########################################
# ======== PKM ======== #

#########################################
# General settings                      #
#########################################

# reload the configuration file
  bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
  bindsym $mod+Shift+R restart
# Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# resize window (you can also use the mouse for that)
  mode "resize" {
          # These bindings trigger as soon as you enter the resize mode

          # Pressing left will shrink the window’s width.
          # Pressing right will grow the window’s width.
          # Pressing up will shrink the window’s height.
          # Pressing down will grow the window’s height.
          bindsym Left resize shrink width 10 px or 10 ppt
          bindsym Down resize grow height 10 px or 10 ppt
          bindsym Up resize shrink height 10 px or 10 ppt
          bindsym Right resize grow width 10 px or 10 ppt

          # back to normal: Enter or Escape or $mod+r
          bindsym Return mode "default"
          bindsym Escape mode "default"
          bindsym $mod+r mode "default"
  }

  bindsym $mod+r mode "resize"

#########################################
# UI                                    #
#########################################

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Ubuntu Regular 10
title_align center

# Add icons to titlebar
for_window [all] title_window_icon padding 1px

# Inner/Outer Gaps
gaps inner 10
gaps outer 0

# Enabling “Smart Gaps” means no gaps will be shown when there is
# precisely one window or split container on the workspace.
#
# inverse_outer only enables outer gaps when there is exactly one
# window or split container on the workspace.
smart_gaps inverse_outer

# Hide edge borders
hide_edge_borders smart

# Colors
#                       border          background      text            indicator (a line which shows where the next window will be placed)     
client.focused          $bgcolor        $bgcolor        $text           $indicator
client.unfocused        $in-bgcolor     $in-bgcolor     $in-text        $in-bgcolor
client.focused_inactive $in-bgcolor     $in-bgcolor     $in-text        $in-bgcolor
client.urgent           $u-bgcolor      $u-bgcolor      $text           $u-bgcolor

# Display Wallpaper

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# Primary display
bar {
    $output-primary
    position top
    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done   
    tray_output primary
  }

include /etc/sway/config.d/*
