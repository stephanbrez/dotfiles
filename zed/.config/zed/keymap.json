// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
    {
        "context": "Workspace",
        "bindings": {
            // "shift shift": "file_finder::Toggle"
        }
    },
    {
        "context": "Editor",
        "bindings": {
            // "j k": ["workspace::SendKeystrokes", "escape"]
        }
    },
    {
        "context": "Dock",
        "bindings": {
            "ctrl-w h": "workspace::ActivatePaneLeft",
            "ctrl-w l": "workspace::ActivatePaneRight",
            "ctrl-w k": "workspace::ActivatePaneUp",
            "ctrl-w j": "workspace::ActivatePaneDown",
            "ctrl-w t": "terminal_panel::ToggleFocus"
            // ... or other keybindings
        }
    },
    {
        "context": "VimControl && !menu",
        "bindings": {
            // Put key bindings here if you want them to work in normal & visual mode.
            // AI
            "ctrl-y": "agent::Keep",
            "ctrl-n": "agent::Reject",
            "ctrl-shift-y": "agent::KeepAll",
            "ctrl-shift-n": "agent::RejectAll",
            "shift-ctrl-r": "agent::OpenAgentDiff",
            // Buffers
            "space ,": "tab_switcher::Toggle",
            // Files
            "space f": "file_finder::Toggle",
            "space e": "project_panel::ToggleFocus",
            // Editor
            "space o": "outline::Toggle",
            "shift-y": ["workspace::SendKeystrokes", "y $"], // Use neovim's yank behavior: yank to end of line.
            "alt-k": "editor::MoveLineUp",
            "alt-j": "editor::MoveLineDown",
            "x x": "editor::Cut", // Cut line
            "d d": "editor::DeleteLine" // Delete line without clipboard
        }
    },
    {
        "context": "vim_mode == normal && !menu",
        "bindings": {
            "x": ["workspace::SendKeystrokes", "v x"] // Cut character
        }
    },
    {
        "context": "vim_mode == visual && !menu",
        "bindings": {
            "d": "editor::Delete"
        }
    },
    {
        "context": "vim_mode == insert",
        "bindings": {
            // "j k": "vim::NormalBefore" // In insert mode, make jk escape to normal mode.
        }
    },
    {
        "context": "EmptyPane || SharedScreen",
        "bindings": {
            // Put key bindings here (in addition to the context above) if you want them to
            // work when no editor exists.
            // "space f": "file_finder::Toggle"
        }
    }
]
